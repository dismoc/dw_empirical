sf <- sf[order(sf$DateApproved),]
ind <- which(is.na(sf$n) == TRUE)
for (i in 2:length(ind)) {
if (ind[i] == ind[i-1]+1) {
ind <- ind[-i]
}
print(length(ind))
}
sf[ind+1,'InitialApprovalAmount'] <- sf[ind+1,'InitialApprovalAmount'] + sf[ind,'InitialApprovalAmount']
sf <- sf[-ind,]
ind <- which(is.na(sf$n) == TRUE)
ind <- ind[1:length(ind)-1]
sf[ind+1,'InitialApprovalAmount'] <- sf[ind+1,'InitialApprovalAmount'] + sf[ind,'InitialApprovalAmount']
sf <- sf[-ind,]
ind <- which(is.na(sf$n) == TRUE)
sf[ind-1,'InitialApprovalAmount'] <- sf[ind-1,'InitialApprovalAmount'] + sf[ind,'InitialApprovalAmount']
sf <- sf[-ind,]
rm(ind, dwborrow1, dwborrow2)
# Creation
sf$cumu <- sf$cumu$tot_change
sf$cumu_init <- 4075359310000 + sf$cumu
sf$InitialApprovalAmount <- ifelse(is.na(sf$InitialApprovalAmount) == TRUE & as.Date(sf$DateApproved) <= as.Date('2020-04-02'), 0, sf$InitialApprovalAmount)
sf$InitialApprovalAmount <- ifelse(is.na(sf$InitialApprovalAmount) == TRUE & as.Date(sf$DateApproved) >= as.Date('2020-08-10'), 0, sf$InitialApprovalAmount)
sf <- sf[-c(75:80),]; sf <- sf[-c(121:123),];  #uncut
sf$ppp_week_avg <- rollapply(sf$InitialApprovalAmount, 5, mean, na.rm=TRUE, fill = NA, partial=3)
sf$dw_quant_avg <- rollapply(sf$Loan.amount, 5, mean, na.rm=TRUE, fill = NA, partial=3)
sf$cum_quant_avg <- rollapply(sf$cumu, 5, mean, na.rm=TRUE, fill = NA, partial=3)
sf$tchange_avg <- rollapply(sf$tot_change, 5, mean, na.rm=TRUE, fill = NA, partial=3)
sf$id <- 1
sf$signal <- ifelse(as.Date(sf$DateApproved) >= as.Date('2020-03-16') & as.Date(sf$DateApproved) <= as.Date('2020-03-21'), 1, 0)
sf$preppp <- ifelse(as.Date(sf$DateApproved) <= as.Date('2020-04-02'), 0, 1)
View(sf)
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = DateApproved, y = InitialApprovalAmount/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = DateApproved, y = Loan.amount, colour ='DW'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('text', label = paste0('Correlation = ',round(cor(sf$Loan.amount,sf$InitialApprovalAmount,'complete'),2)),
x=max(sf$DateApproved, na.rm=TRUE) - 21, y=10e9)
#Now with the log values
ggplot(sf) +
geom_line(aes(x = DateApproved, y = log(InitialApprovalAmount+1), colour ='PPP'), size=1.5) +
geom_line(aes(x = DateApproved, y = log(Loan.amount+1), colour ='DW'), size=1.5) +
scale_y_continuous(name = "Log Value") +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('text', label = paste0('Correlation = ',round(cor(log(sf$Loan.amount+1),log(sf$InitialApprovalAmount+1),'complete'),2)),
x=max(sf$DateApproved, na.rm=TRUE) - 21, y=10)
# using moving averages
ggplot(sf) +
geom_line(aes(x = DateApproved, y = ppp_week_avg/5, colour ='PPP'), size=1.5) +
geom_line(aes(x = DateApproved, y = dw_quant_avg, colour ='DW'), size=1.5) +
scale_y_continuous(name = "Mov. Avg. DW Loans",
sec.axis = sec_axis(~.*5, name="Mov. Avg. PPP Loans", labels = unit_format(unit = "B", scale = 1e-9)),
labels = unit_format(unit = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('text', label = paste0('Correlation = ',round(cor(sf$ppp_week_avg,sf$dw_quant_avg,'complete'),2)),
x=max(sf$DateApproved, na.rm=TRUE) - 21, y=5e9)
#Now with the log values
ggplot(sf) +
geom_line(aes(x = DateApproved, y = log(ppp_week_avg), colour ='PPP'), size=1.5) +
geom_line(aes(x = DateApproved, y = log(dw_quant_avg), colour ='DW'), size=1.5) +
scale_y_continuous(name = "MA Log Value") +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('text', label = paste0('Correlation = ',round(cor(log(sf$ppp_week_avg+1),log(sf$dw_quant_avg+1),'complete'),2)),
x=max(sf$DateApproved, na.rm=TRUE) - 21, y=22)
df$RCONA570
df$RCONA247 - df$RCONA570
df$RCONG091
df$RCONG091 + df$RCONG094 + df$RCONG097 + df$RCONG100
df$RCON2122
df$RCON2122-df$RCONA570
df %>% group_by(IDRSSD,Date)
group_by(df,IDRSSD,Date)
group_by(df,IDRSSD,Date)$RCON2122
lead(group_by(df,IDRSSD,Date)$RCON2122)
df %>% group_by(IDRSSD,Date) %>% mutate(loans_nquarter = lead(RCON2122))
df %>% group_by(IDRSSD,Date) %>% mutate(loans_nquarter = lead(RCON2122, order_by=Date))
class(df$RCON2122)
pdata.frame(df, c('IDRSSD','Date')) %>% mutate(t1loans = lead(RCON2122))
df2 <- pdata.frame(df)
lead(df2$RCON2122)
df2$RCON2122
lead(df2$RCON2122,1)
rm(df2)
df %>% group_by(IDRSSD)
df %>% group_by(IDRSSD) %>% arrange(Date)
df %>% group_by(IDRSSD) %>% arrange(Date) &>& mutate(t1loan = lead(RCON2122))
df %>% group_by(IDRSSD) %>% arrange(Date) %>% mutate(t1loan = lead(RCON2122))
rm(matchlb, att)
gc()
df %>% group_by(IDRSSD) %>% arrange(Date) %>% mutate(t1loan = lead(RCON2122))
df %>% group_by(IDRSSD) %>% arrange(Date) %>% mutate(t1loan = dplyr::lead(RCON2122))
df <- df %>% group_by(IDRSSD) %>% arrange(Date) %>% mutate(t1loan = dplyr::lead(RCON2122))
gc()
gc()
df <- df %>% group_by(IDRSSD) %>% arrange(Date) %>% mutate(t1loan = dplyr::lead(RCON2122))
df$t1loan
df$t1loan - df$RCON2122
df$t1loan - df$RCON2122 - df$RCONA570
df$t1loan - (df$RCON2122 - df$RCONA570)
max(df$t1loan - (df$RCON2122 - df$RCONA570),0)
iflese(df$t1loan - (df$RCON2122 - df$RCONA570)) < 0, 0, df$t1loan - (df$RCON2122 - df$RCONA570)))
ifelse(df$t1loan - (df$RCON2122 - df$RCONA570)) < 0, 0, df$t1loan - (df$RCON2122 - df$RCONA570)))
ifelse(df$t1loan - (df$RCON2122 - df$RCONA570) < 0, 0, df$t1loan - (df$RCON2122 - df$RCONA570))
df$new_loans <- ifelse(df$t1loan - (df$RCON2122 - df$RCONA570) < 0, 0, df$t1loan - (df$RCON2122 - df$RCONA570))
df$new_nppp_loans <- ifelse(is.na(df$RCONLG27) == TRUE, df$new_loans, df$new_loans - df$RCONLG27)
df$new_nppp_loans
df$new_loans - df$new_nppp_loans
table(df$new_loans - df$new_nppp_loans)
# Show the share of loans that are non-ppp and ppp since 2019
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(new_loans,RCONLG27) ~ Date, plot1, sum)
plot1 <- plot1 %>% gather('Loan Type', val,-Date)
plot1$Date <- as.Date(plot1$Date)
plot1
plot1$`Loan Type` <- ifelse(plot1$`Loan Type` == 'RCONLG27', 'PPP Loans', 'Non-PPP Loans')
ggplot(plot1, aes(x=Date,y=val,fill=`Loan Type`)) + geom_area() +
scale_y_continuous(labels = unit_format(unit = "T", scale = 1e-9)) +
ylab('Quantity') + theme(legend.position = c(.2, .5)) +
scale_color_hue(labels = c("T999", "T888")) +
scale_x_date(breaks = date_breaks("3 months")) +
theme(text = element_text(size = 16))
plot1
# Show the share of loans that are non-ppp and ppp since 2019
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(new_loans,RCONLG27) ~ Date, plot1, sum)
plot1
# Show the share of loans that are non-ppp and ppp since 2019
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(RCON2122, new_loans,RCONLG27) ~ Date, plot1, sum)
plot1
df$RCONA567 - df$RCONA570
df$RCONA247 - df$RCONA570
df$RCONA247 - df$RCONA571
df$RCONA570 - (df$RCONA247 - df$RCONA571)
max(df$RCONA570,(df$RCONA247 - df$RCONA571))
pmax(df$RCONA570,(df$RCONA247 - df$RCONA571))
df$new_loans <- ifelse(df$t1loan - (df$RCON2122 - pmax(df$RCONA570,(df$RCONA247 - df$RCONA571))) < 0, 0, df$t1loan - (df$RCON2122 - pmax(df$RCONA570,(df$RCONA247 - df$RCONA571))))
df$new_loans
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(new_loans,RCONLG27) ~ Date, plot1, sum)
plot1 <- plot1 %>% gather('Loan Type', val,-Date)
plot1$Date <- as.Date(plot1$Date)
plot1$`Loan Type` <- ifelse(plot1$`Loan Type` == 'RCONLG27', 'PPP Loans', 'Non-PPP Loans')
ggplot(plot1, aes(x=Date,y=val,fill=`Loan Type`)) + geom_area() +
scale_y_continuous(labels = unit_format(unit = "T", scale = 1e-9)) +
ylab('Quantity') + theme(legend.position = c(.2, .5)) +
scale_color_hue(labels = c("T999", "T888")) +
scale_x_date(breaks = date_breaks("3 months")) +
theme(text = element_text(size = 16))
# Libraries ----
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library('fuzzyjoin')
library('lubridate')
library('xtable')
gc()
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library('fuzzyjoin')
library('lubridate')
library('xtable')
library(tidyverse)
library(mlr3verse)
library(plm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library(gtools)
library(lubridate)
library("R.utils")
# Merging data ----
q <- c("0331","0630","0930","1231")
y <- c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021")
list <- dir(path=paste0("D:/Research/DW lending empirical/Data/call_report/FFIEC CDR Call Bulk All Schedules ",q[4],"2009"), pattern=".txt")
df <- map(paste0("D:/Research/DW lending empirical/Data/call_report/FFIEC CDR Call Bulk All Schedules ",q[4],"2009/",list),
read.delim, stringsAsFactors = FALSE, check.names = FALSE, row.names = NULL, header=TRUE, skip=0)
for (i in 2:length(df)) {
df[[i]] <- df[[i]][-1,]
df[[i]] <- type.convert(df[[i]])
df[[i]]$IDRSSD <- as.numeric(df[[i]]$IDRSSD)
}
crdat <- df %>% reduce(left_join, suffix = c("",".y"))
crdat$Date <- as.Date(ymd(paste0(2009,q[4])))
crdat <- crdat[,colSums(is.na(crdat))<nrow(crdat)]
for (i in 1:length(y)) {
for(j in 1:length(q)) {
print(paste0('Starting Loop: ',q[j],y[i]))
list <- dir(path=paste0("D:/Research/DW lending empirical/Data/call_report/FFIEC CDR Call Bulk All Schedules ",q[j],y[i],"/"), pattern=".txt")
df <- map(paste0("D:/Research/DW lending empirical/Data/call_report/FFIEC CDR Call Bulk All Schedules ",q[j],y[i],"/",list),
read.delim, stringsAsFactors = FALSE, check.names = FALSE, row.names = NULL, header=TRUE, skip=0)
for (k in 2:length(df)){
df[[k]] <- df[[k]][-c(1),]
df[[k]] <- type.convert(df[[k]], as.is=TRUE)
df[[k]]$IDRSSD <- as.numeric(df[[k]]$IDRSSD)
}
crdatn <- df %>% reduce(left_join, suffix = c("",".y"))
crdatn$Date <- as.Date(ymd(paste0(y[i],q[j])))
crdatn <- crdatn[,colSums(is.na(crdatn))<nrow(crdatn)]
crdat <- smartbind(crdat,crdatn)
}
}
rm(i,j,k, df, crdatn)
crdat$Date <- as.Date(crdat$Date)
crdat1 <- crdat
defs <- data.frame(read.csv("D:/Research/DW lending empirical/Data/call_report/cr_defs.csv"))[,1:9]
defs$Code <- defs$ï..Code
defs <- defs[defs$Code %in% colnames(crdat1),]
ls <- unique(defs$Item.Name)
for (i in 1:length(ls)) {
print(paste0('Begin Loop: ',i))
n <- unique(defs[defs$Item.Name %in% ls[i],]$Code)
if (length(n) > 1) {
#List sort
k <- vector(length = length(n))
for (j in 1:length(n)) {
k[j] = sum(is.na(eval(parse(text=paste0('crdat$',n[j])))))
}
list <- data.frame(n,k)
list <- list[order(list$k),]
for (m in 2:length(n)) {
crdat1[, colnames(crdat1) %in% list[1,1]] <- coalesce(as.numeric(eval(parse(text=paste0("crdat1$",list[1,1])))), as.numeric(eval(parse(text=paste0("crdat1$",list[m,1])))))
}
crdat1 <- crdat1 %>% select(-contains(list[2:length(n),1]))
rm(k, list, j, m)
}
print(paste0('End Loop: ',i))
}
crdat1 <- crdat1 %>% select(-contains('text'))
crdat <- crdat1
rm(crdat1, i, j, n, k, list, ls)
inst <- data.frame(read.csv("D:/Research/DW lending empirical/Data/institutions.csv"))
inst1 <- inst[,c('FED_RSSD','FED','FDICREGN')]
setnames(inst1, old = c('FED_RSSD'), new = c('IDRSSD'))
crdat <- left_join(crdat, inst1, by= 'IDRSSD')
rm(inst, inst1, defs)
write.csv(crdat,"D:\\Research\\DW lending empirical\\Data\\call_rep_full.csv")
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library('fuzzyjoin')
library('lubridate')
library('xtable')
call_rep <- read_csv("D:/Research/DW lending empirical/Data/call_rep_full.csv")
effr <- read_csv("D:/Research/DW lending empirical/Data/effr_range.csv")
dwborrow <- read_csv("D:/Research/DW lending empirical/Data/dwborrow.csv")
int_rate <- read_excel("D:/Research/DW lending empirical/Data/int_rates.xls")
sdc <- read_csv("D:/Research/DW lending empirical/Data/sdc_full.csv")
def <- read_csv("D:/Research/DW lending empirical/Data/defs.csv")
inst <-read_csv("D:/Research/DW lending empirical/Data/INSTITUTIONS2.CSV")
int_rate$Date <- as.Date(int_rate$Date)
q <- c("0331","0630","0930","1231")
y <- c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020",'2021')
dwbsub <- subset(dwborrow, Type.of.credit == "Primary Credit")
dwbsub <- subset(dwbsub, dwbsub$Loan.amount >= 100000)
dwbsub$Date <- data.frame(timeLastDayInQuarter(dwbsub$Loan.date, format = "%Y-%m-%d", zone = "", FinCenter = ""))$GMT.x..i..
dwbsub$repay <- (dwbsub$Interest.rate*dwbsub$Term/36000)*dwbsub$Loan.amount
dcomb <- merge(merge(aggregate(Term ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum),
aggregate(Loan.amount*Term ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum)),
aggregate(repay ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum))
rm(dwbsub, dwborrow)
dcomb$avg.int <- 36000*dcomb$repay/dcomb$`Loan.amount * Term`
setnames(dcomb, old = c('Borrower.ABA.number','Date','Term','Loan.amount * Term','repay','avg.int'),
new = c('ABA_routing','Date','dw_freq','dw_quant','repay','avg_int'))
dcomb$ABA_routing <- as.numeric(dcomb$ABA_routing)
inst$IDRSSD <- inst$FED_RSSD
df <- call_rep %>% left_join(inst[,c('FED','FDICREGN','IDRSSD','OFFICES','BKCLASS','OFFDOM','OFFFOR','STMULT','CHRTAGNT','ESTYMD')], by=('IDRSSD'),
suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
df$Date <- as.Date(df$Date)
df <- df %>% left_join(sdc, by=c('IDRSSD','Date'), suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
dcomb$Date <- as.Date(dcomb$Date)
df <- df %>% left_join(dcomb, by=c('Primary ABA Routing Number' = 'ABA_routing','Date'), suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
rm(inst, call_rep, dcomb, sdc)
ag <- aggregate(dw_freq ~ IDRSSD, data=df, FUN = sum, na.rm = TRUE)
setnames(ag, old=c('dw_freq'), new=c('freq'))
df1 <- left_join(df, ag)
df1$dwaccess_1 <- ifelse(df1$freq > 0, 1, 0)
df1$dwaccess_1[is.na(df1$dwaccess_1)] = 0
df1 <- df1[ , -which(names(df1) %in% c("freq"))]
df <- df1
rm(df1,ag)
#dwaccess_2
df1 = df %>%
arrange(IDRSSD,Date) %>%
group_by(IDRSSD) %>%
mutate(agg_access =rollapplyr(dw_freq, 60, sum, partial = TRUE, na.rm = TRUE) )
df1$dwaccess_2 <- ifelse(df1$agg_access > 0, 1, 0)
df1 <- df1[ , -which(names(df1) %in% c("agg_access"))]
df <- df1
rm(df1)
#Adding additional series - reserve asset ratio and reserve deposit ratio,
df$dw_freq[is.na(df$dw_freq)] <- 0
df$dwborrow_bin <- ifelse(df$dw_freq > 0, 1, 0)
df$reserve_asset_ratio <- (df$RCON0081+df$RCON0071)/df$RCON2170
df$reserve_deposit_ratio <- (df$RCON0081+df$RCON0071)/df$RCON2200
df$reserve_loan_ratio <- (df$RCON0081+df$RCON0071)/df$RCON2122
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')] <- NA
df$reserve_deposit_ratio <- Winsorize(df$reserve_deposit_ratio, probs = c(.01,.99), na.rm = TRUE)
df$dwborrow_cov <- ifelse(df$dwborrow_bin == 1 & as.Date(df$Date) >= as.Date('2020-03-31'), 1, 0)
# dwaccess_cov
ag <- aggregate(dwborrow_cov ~ IDRSSD, data=df, FUN = sum, na.rm = TRUE)
setnames(ag, old=c('dwborrow_cov'), new=c('freq_cov'))
df1 <- left_join(df, ag)
df1$dwaccess_cov <- ifelse(df1$freq_cov > 0, 1, 0)
df1$dwaccess_cov[is.na(df1$dwaccess_cov)] = 0
df1 <- df1[ , -which(names(df1) %in% c("freq_cov"))]
df <- df1
rm(df1,ag)
# pppaccess_cov
ag <- aggregate(RCONLG26 ~ IDRSSD, data=df, FUN = sum, na.rm = TRUE)
setnames(ag, old=c('RCONLG26'), new=c('ppp_quant_cov'))
df1 <- left_join(df, ag)
df1$pppaccess_cov <- ifelse(df1$freq_cov > 0, 1, 0)
df1$pppaccess_cov[is.na(df1$dwaccess_cov)] = 0
df <- df1
rm(df1,ag, effr, int_rate, def)
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library('fuzzyjoin')
library('lubridate')
df$bigsmall <- ifelse(df$RCON2170 >= 1000000, 'Large', 'Small')
df$bigsmall2 <- ifelse(df$RCON2170 >= 300000, 'Large', 'Small')
df <- df %>% group_by(IDRSSD) %>% arrange(Date) %>% mutate(t1loan = dplyr::lead(RCON2122))
df$new_loans <- ifelse(df$t1loan - (df$RCON2122 - pmax(df$RCONA570,(df$RCONA247 - df$RCONA571))) < 0, 0, df$t1loan - (df$RCON2122 - pmax(df$RCONA570,(df$RCONA247 - df$RCONA571))))
# CAMELS - Duchin Sosyura (2014)----
# Capital Adequacy
df$ca <- Winsorize(df$RCON8274/df$RCONA223, probs=c(.01,.99),na.rm = TRUE)
#Asset quality
df$aq <- -(df$RCON1407 + df$RCON1403)/df$RCON2122
# Capital ratios - Duchin Sosyura (2014) ----
df$t1riskrat <- df$RCON7206
df$totriskrat <- df$RCON7205
df$eqcaprat <- df$RCONG105/df$RCON2170
df$RCON7206
df$eqcaprat <- df$RCONG105/df$RCON2170
# Bank fundamentals - Duchin Sosyura (2014) ----
df$size <- Winsorize(log(df$RCON2170),probs=c(.01,.99), na.rm = TRUE)
df$age <- year(df$Date) - year(df$ESTYMD)
join <- read_csv("D:/Research/DW lending empirical/Data/sod_merged.csv")
join$CERT <- as.numeric(join$CERT)
join <- join[!is.na(join$CERT),][2:6]; join <- join[!is.na(join$exposure),]
df$Date <- as.Date(as.character(df$Date))
df <- left_join(df, join, by= c('cert' = 'CERT', 'Date'))
rm(join)
df$lent_total <- (df$RCONB987 + df$RCONB989)
df$lent_total[IsZero(df$lent_total)] = NA
df$int_paid_ib <- Winsorize(df$RIAD4020*100/(df$lent_total),probs = c(0.05, 0.95), na.rm = TRUE)
df$borr_total <- (df$RCONB993 + df$RCONB995)
df$borr_total[IsZero(df$borr_total)] = NA
df$int_got_ib <- Winsorize(df$RIAD4180*100/(df$borr_total),probs = c(0.05, 0.95), na.rm = TRUE)
# Dependent variables from Acharya Mora (2015) ----
df <- pdata.frame(df, c('IDRSSD','Date'))
df$int_ltd_ann <- Winsorize((df$RIADA517/df$RCONA514)*400,probs = c(0.01, 0.99), na.rm = TRUE) #interest rate, large time deposits (implicit)
df$int_cd_ann <- Winsorize(((df$RIAD4508 + df$RIAD0093)/df$RCONA514)*400,probs = c(0.01, 0.99), na.rm = TRUE) #interest rate, core deposits (implicit)
df$qdep_growth <- Winsorize((df$RCON2200-lag(df$RCON2200))/lag(df$RCON2200),probs = c(0.01, 0.99), na.rm = TRUE) #deposit growth rates
df$qcordep_growth <- Winsorize((df$RCON2215 + df$RCON6810 + df$RCON0352 + df$RCON6648 - (lag(df$RCON2215) + lag(df$RCON6810) + lag(df$RCON0352) + lag(df$RCON6648)))/
(lag(df$RCON2215) + lag(df$RCON6810) + lag(df$RCON0352) + lag(df$RCON6648)),probs = c(0.01, 0.99), na.rm = TRUE) #core deposit growth rates
df$ci_loans <- ifelse(is.na(df$RCON1766) == TRUE, df$RCON1763+df$RCON1764, df$RCON1766)
df$ci_loans_growth <- Winsorize((df$ci_loans - lag(df$ci_loans))/lag(df$ci_loans), probs = c(.01,.99), na.rm = TRUE)
df$loans <- df$RCON2122
df$loans_growth <- Winsorize((df$RCON2122 - lag(df$RCON2122))/lag(df$RCON2122),probs = c(0.01, 0.99), na.rm = TRUE)
df$ppp_bin <- ifelse(df$RCONLG26 > 0, 1, 0)
df$ppp_advance <- df$RCONLL59 + df$RCONLL60
df$ppp_uncovered <- df$RCONLG27 - df$RCONLL59 - df$RCONLL60
df$nonppp_loans <- ifelse(is.na(df$RCONLG27) == TRUE, df$RCON2122, df$RCON2122 - df$RCONLG27)
df$new_nppp_loans <- ifelse(is.na(df$RCONLG27) == TRUE, df$new_loans, df$new_loans - df$RCONLG27)
df$nonppp_loans_growth <- Winsorize((df$nonppp_loans - lag(df$nonppp_loans))/lag(df$nonppp_loans), probs=c(.01,.99), na.rm = TRUE)
df$loan_reserve_ratio <- df$RCON2122/df$RCON0010
df$nppp_loan_reserve_ratio <- df$nonppp_loans/df$RCON0010
df$ppp_loan_reserve_ratio
df <- df %>%
group_by(IDRSSD, Date) %>%
slice(n())
df <- data.frame(df)
df$IDRSSD <- as.numeric(as.character(df$IDRSSD))
#Save File ----
write.csv(df,"D:\\Research\\DW lending empirical\\Data\\merged_cov.csv")
ppb <- read_csv("D:/Research/DW lending empirical/Data/ppp_daily.csv")
dwborrow <- read_csv("D:/Research/DW lending empirical/Data/dwborrow.csv")
pplf <- read_csv("D:/Research/DW lending empirical/Data/ppplf_full.csv")
pppm <- read_csv("D:/Research/DW lending empirical/Data/ppp_bankmatched.csv")
att <- read_csv("D:/Research/DW lending empirical/Data/ffiec/Atrributes_merged.csv")[,c('ID_ABA_PRIM','#ID_RSSD','STATE_ABBR_NM')]
setnames(att,old=c('ID_ABA_PRIM','#ID_RSSD','STATE_ABBR_NM'), new =c('ABA','IDRSSD','STATE'))
plot1 <- left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
plot1 <- left_join(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], median), by='Date')
setnames(plot1, old=c('n','Loan.amount.x','Loan.amount.y'), new=c('Count','Amount','Mean'))
plot1$Date <- as.character(plot1$Date)
plot1$Amount <- paste0(round(plot1$Amount/1e9,2),' B')
plot1$Mean <- paste0(round(plot1$Mean/1e6,2),' M')
print(xtable(plot1), include.rownames=FALSE)
# Show the share of loans that are non-ppp and ppp since 2019
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(new_loans,RCONLG27) ~ Date, plot1, sum)
plot1 <- plot1 %>% gather('Loan Type', val,-Date)
plot1$Date <- as.Date(plot1$Date)
plot1$`Loan Type` <- ifelse(plot1$`Loan Type` == 'RCONLG27', 'PPP Loans', 'Non-PPP Loans')
ggplot(plot1, aes(x=Date,y=val,fill=`Loan Type`)) + geom_area() +
scale_y_continuous(labels = unit_format(unit = "T", scale = 1e-9)) +
ylab('Quantity') + theme(legend.position = c(.2, .5)) +
scale_color_hue(labels = c("T999", "T888")) +
scale_x_date(breaks = date_breaks("3 months")) +
theme(text = element_text(size = 16))
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('xtable')
library('scales')
library('usmap')
ggplot(plot1, aes(x=Date,y=val,fill=`Loan Type`)) + geom_area() +
scale_y_continuous(labels = unit_format(unit = "T", scale = 1e-9)) +
ylab('Quantity') + theme(legend.position = c(.2, .5)) +
scale_color_hue(labels = c("T999", "T888")) +
scale_x_date(breaks = date_breaks("3 months")) +
theme(text = element_text(size = 16))
df$RCON2122
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(RCON2122,RCONLG27) ~ Date, plot1, sum)
plot1 <- plot1 %>% gather('Loan Type', val,-Date)
plot1$Date <- as.Date(plot1$Date)
plot1$`Loan Type` <- ifelse(plot1$`Loan Type` == 'RCONLG27', 'PPP Loans', 'Non-PPP Loans')
ggplot(plot1, aes(x=Date,y=val,fill=`Loan Type`)) + geom_area() +
scale_y_continuous(labels = unit_format(unit = "T", scale = 1e-9)) +
ylab('Quantity') + theme(legend.position = c(.2, .5)) +
scale_color_hue(labels = c("T999", "T888")) +
scale_x_date(breaks = date_breaks("3 months")) +
theme(text = element_text(size = 16))
