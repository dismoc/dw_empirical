ind <- which(is.na(sf$n) == TRUE)
for (i in 2:length(ind)) {
if (ind[i] == ind[i-1]+1) {
ind <- ind[-i]
}
print(length(ind))
}
sf[ind+1,'InitialApprovalAmount'] <- sf[ind+1,'InitialApprovalAmount'] + sf[ind,'InitialApprovalAmount']
sf <- sf[-ind,]
ind <- which(is.na(sf$n) == TRUE)
ind <- ind[1:length(ind)-1]
sf[ind+1,'InitialApprovalAmount'] <- sf[ind+1,'InitialApprovalAmount'] + sf[ind,'InitialApprovalAmount']
sf <- sf[-ind,]
ind <- which(is.na(sf$n) == TRUE)
sf[ind-1,'InitialApprovalAmount'] <- sf[ind-1,'InitialApprovalAmount'] + sf[ind,'InitialApprovalAmount']
sf <- sf[-ind,]
rm(ind, dwborrow1, dwborrow2)
# Creation
sf$InitialApprovalAmount <- ifelse(is.na(sf$InitialApprovalAmount) == TRUE & as.Date(sf$DateApproved) <= as.Date('2020-04-02'), 0, sf$InitialApprovalAmount)
sf$InitialApprovalAmount <- ifelse(is.na(sf$InitialApprovalAmount) == TRUE & as.Date(sf$DateApproved) >= as.Date('2020-08-09'), 0, sf$InitialApprovalAmount)
#sf <- sf[-c(75:80),]; sf <- sf[-c(121:123),];  #uncut
sf$ppp_week_avg <- rollapply(sf$InitialApprovalAmount, 3, mean, na.rm=TRUE, fill = NA, partial=3)
sf$dw_quant_avg <- rollapply(sf$Loan.amount, 3, mean, na.rm=TRUE, fill = NA, partial=3)
sf$cum_quant_avg <- rollapply(sf$cumu, 5, mean, na.rm=TRUE, fill = NA, partial=3)
sf$tchange_avg <- rollapply(sf$tot_change, 5, mean, na.rm=TRUE, fill = NA, partial=3)
sf$id <- 1
sf$signal <- ifelse(as.Date(sf$DateApproved) >= as.Date('2020-03-16') & as.Date(sf$DateApproved) <= as.Date('2020-03-21'), 1, 0)
sf$preppp <- ifelse(as.Date(sf$DateApproved) <= as.Date('2020-04-02'), 0, 1)
setnames(sf, old = c('DateApproved','InitialApprovalAmount','Original.Outstanding.Advance.Amount','Loan.amount'),
new = c('Date','PPP','PPPLF','DW'))
sf <- subset(sf, DateApproved >= '2020-04-03' & DateApproved <= '2020-08-08')
sf
sf$PPPLF
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = PPPLF, colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
sf <- subset(sf, Date >= '2020-04-03' & Date <= '2020-08-08')
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = PPPLF, colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = lead(PPPLF), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
sf
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = dplyr::lead(PPPLF), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = dplyr::lead(PPPLF,2), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = dplyr::lead(PPPLF,3), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = dplyr::lead(PPPLF,2), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='black'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = dplyr::lead(PPPLF,2), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = dplyr::lead(PPPLF,2), colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
geom_line(aes(x = Date, y = PPPLF, colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
#geom_line(aes(x = Date, y = PPPLF, colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
sf3
sf <- aggregate(cbind(DW, PPP, PPPLF) ~ Date, sf3, sum)
sf
# Figures ----
# only for april - august period
# PPP and DW loan correlation not log with cut
ggplot(sf) +
geom_line(aes(x = Date, y = PPP/3, colour ='PPP'), size=1.5) +
geom_line(aes(x = Date, y = DW, colour ='DW'), size=1.5) +
#geom_line(aes(x = Date, y = PPPLF, colour ='PPPLF'), size=1.5) +
scale_y_continuous(name = "Daily DW Loans",
sec.axis = sec_axis(~.*3, name="Daily PPP Loans", labels = label_number(suffix = "B", scale = 1e-9)),
labels = label_number(suffix = "B", scale = 1e-9)) +
labs(x="Date") +
theme(legend.position = c(.9, .9), legend.title=element_blank(), text = element_text(18)) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-03'),xmax = as.Date('2020-04-16'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-04-27'),xmax = as.Date('2020-07-01'),ymin = -Inf, ymax = Inf, alpha = .35) +
annotate('rect',fill='gray',xmin=as.Date('2020-07-06'),xmax = as.Date('2020-08-08'),ymin = -Inf, ymax = Inf, alpha = .35)
dwborrow1 <- subset(dwborrow, Loan.date >= as.Date('2020-03-01') & Type.of.credit == 'Primary Credit')
dwborrow1 <- dwborrow1[order(dwborrow1$Borrower.ABA.number,dwborrow1$Loan.date),]
dwborrow1$Borrower.ABA.number <- as.numeric(dwborrow1$Borrower.ABA.number)
dwborrow1$term <- as.numeric(dwborrow1$Repayment.date - dwborrow1$Loan.date)
dwborrow1
dwborrow1 <- left_join(aggregate(Loan.amount ~ Borrower.ABA.number + Loan.date, dwborrow1, sum), dwborrow1[,c('Loan.date','Borrower.ABA.number','Loan.amount','Borrower.state')])
dwborrow1
ls <- subset(df, Date == '2020-03-31')
ls <- unique(data.frame(RSSD = ls$IDRSSD, ABA = ls$Primary.ABA.Routing.Number, STATE = ls$Financial.Institution.State))
sf2 <- data.frame(ls, Date=rep(full_seq(c(as.Date('2020-04-03'),as.Date('2020-08-08')), period=1),5165))
sf2 <- sf2 %>% group_by(RSSD) %>% mutate(Date = full_seq(c(as.Date('2020-04-03'),as.Date('2020-08-08')), period=1))
ls <- unique(smartbind(ls,data.frame(att)))
sf2 <- left_join(sf2,aggregate(cbind(n,InitialApprovalAmount) ~ rssd + DateApproved, pppm, sum), by=c('RSSD'='rssd','Date'='DateApproved'))
sf2$n <- ifelse(is.na(sf2$n) == TRUE, 0, sf2$n)
sf2$InitialApprovalAmount <- ifelse(is.na(sf2$InitialApprovalAmount) == TRUE, 0, sf2$InitialApprovalAmount)
sf2 <- full_join(sf2,
left_join(data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
pplf[,c('Institution.RSSD', 'Date.Of.Advance', 'origin_date')]),
by=c('RSSD' = 'Institution.RSSD', 'Date' = 'Date.Of.Advance'))
#changing terms to overnights
dwborrow1 <- subset(dwborrow, Loan.date >= as.Date('2020-03-01') & Type.of.credit == 'Primary Credit')
dwborrow1 <- dwborrow1[order(dwborrow1$Borrower.ABA.number,dwborrow1$Loan.date),]
dwborrow1$Borrower.ABA.number <- as.numeric(dwborrow1$Borrower.ABA.number)
dwborrow1$term <- as.numeric(dwborrow1$Repayment.date - dwborrow1$Loan.date)
dwborrow1 <- left_join(aggregate(Loan.amount ~ Borrower.ABA.number + Loan.date, dwborrow1, sum), dwborrow1[,c('Loan.date','Borrower.ABA.number','Loan.amount','Borrower.state')])
sf2 <- full_join(sf2,dwborrow1[,c('Loan.date','Borrower.ABA.number','Loan.amount','Borrower.state')], by=c('ABA' = 'Borrower.ABA.number', 'Date' = 'Loan.date'))
sf2[is.na(sf2$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf2[is.na(sf2$Loan.amount),c('Loan.amount')] <- 0
keep <- c('Date','size','IDRSSD','reserve_asset_ratio','reserve_loan_ratio','RCON2170','RCON0071','RCON0081','RCON2200','eqcaprat','age','borr_total','FED','exposure','OFFICES', 'aq', 'roe','RCONB529',
'RCFA7204','nonppp_loans')
temp <- subset(df, as.Date(Date) >= as.Date('2020-03-31'))[,keep]
temp$Date <- as.Date(temp$Date)
sf2$Quarter <- as.Date(quarter(sf2$Date, type='date_first')-1)
sf2 <- left_join(sf2, temp, by=c('RSSD' = 'IDRSSD', 'Quarter' = 'Date'))
setnames(sf2, old=c('InitialApprovalAmount','Original.Outstanding.Advance.Amount', 'Loan.amount'),
new = c('PPP','PPPLF','DW'))
sf2$Reserves <- (sf2$RCON0081+ sf2$RCON0071)*1000
sf2$Assets <- sf2$RCON2170*1000
sf2$dwsores <- sf2$DW/sf2$Reserves
sf2$pppsores <- sf2$PPP/sf2$Reserves
sf2$pppsores <- ifelse(is.na(sf2$pppsores) == TRUE, 0, sf2$pppsores)
sf2$lfsores <- sf2$PPPLF/sf2$Reserves
sf2$npplsores <- sf2$nonppp_loans/sf2$Reserves
#sf2$delt_so_reserves <- sf2$r_delt*100/sf2$RCON2170
sf2$dwbin_notest <- ifelse(sf2$dwsores > 0.01, 1,0)
sf2$dwbin_notest <- ifelse(is.na(sf2$dwbin_notest) == TRUE, 0, sf2$dwbin_notest)
sf2$dwsores <- ifelse(sf2$dwbin_notest == 1, sf2$dwsores, 0)
sf2$dw_bin <- ifelse(sf2$DW > 0, 1, 0)
sf2$levratio <- sf2$RCFA7204
sf2$bigsmall <- ifelse(sf2$RCON2170 > 1284000, 1, 0)
#Creating the PPP active indicator
sf2$PPPLF_ind <- ifelse(sf2$PPPLF > 0, 1, 0)
sf2$r_delt <- -sf2$PPPLF + sf2$PPP
sf2 <- sf2[order(sf2$RSSD,sf2$Date),]
sf2 <- sf2 %>% group_by(RSSD) %>% mutate(cs_ppp = cumsum(PPP), cs_delt = cumsum(r_delt))
sf2$month <- month(sf2$Date)
sf2$rsa <- sf2$Reserves/sf2$Assets
sf2$lsa <- sf2$RCONB529/sf2$RCON2170
sf2$dsa <- sf2$RCON2200/sf2$RCON2170
temp <- aggregate(cbind(size,reserve_asset_ratio) ~ RSSD, sf2, mean) %>% mutate(size_quint = ntile(size,4), shock_quint = ntile(reserve_asset_ratio,5))
sf2 <- left_join(sf2, temp[,c('RSSD','size_quint','shock_quint')], by = 'RSSD')
temp <-aggregate(cbind(PPP,DW,PPPLF) ~ RSSD, sf2, sum)
temp$PPPLF_i <- ifelse(temp$PPPLF > 0, 1, 0)
temp$DW_i <- ifelse(temp$DW > 0, 1, 0)
temp$PPP_i <- ifelse(temp$PPP > 0, 1, 0)
sf2 <- left_join(sf2,temp[,c('RSSD','PPPLF_i','DW_i','PPP_i')])
sf2$State <- coalesce(sf2$STATE, sf2$Borrower.state)
#Create series on whether bank has accessed the LF within the past month
t <- aggregate(cbind(PPPLF_ind,PPPLF) ~ RSSD + Date, sf2, sum) %>% group_by(RSSD) %>% arrange(RSSD, Date)
t <- t %>% group_by(RSSD) %>%
mutate(LF_30i = rollapplyr(PPPLF_ind, width = 30, FUN = sum, partial = TRUE),
LF_30 = rollapplyr(PPPLF, width = 30, FUN = sum, partial = TRUE)) %>%
drop_na()
t$LF_30i <- ifelse(t$LF_30 > 0, 1, 0)
sf2 <- left_join(sf2,t[,c('RSSD','Date','LF_30')],by=c('RSSD','Date'))
sf2$LF_30 <- sf2$LF_30/sf2$Reserves
sf2$LF_30 <- ifelse(is.na(sf2$LF_30) == TRUE, 0, sf2$LF_30)
sf2 <- left_join(sf2,binstr,by=c('RSSD'='IDRSSD','Date'))
sf2$covexpo <- ifelse(sf2$covexpo < 0, 0, sf2$covexpo)
# create series on whether bank has used DW 5 years pre-covid
dwborrow1 <- subset(dwborrow, Loan.date >= '2015-04-03' & Loan.date < '2020-04-03')
ls <- intersect(unique(sf2$ABA),unique(dwborrow1$Borrower.ABA.number))
sf2[sf2$ABA %in% ls, 'precovdw'] <- 1
sf2$precovdw <- ifelse(is.na(sf2$precovdw) == TRUE, 0, 1)
#merging with the covid data
# Making the regression dataset
sf3 <- subset(sf2, Date >= as.Date('2020-04-03') & Date <= as.Date('2020-08-08'))
sf3 <- sf3[!duplicated(sf3[c("RSSD", "Date")]),]
sf3 <- sf3 %>% drop_na(RSSD, Date, State, size_quint)
sf3 <- sf3[!sf3$Reserves ==0,]
sf3 <- sf3[rowSums(is.na(sf3)) != ncol(sf3), ]
#stargazer(data.frame(sf3[,c('PPP','PPPLF','PPPLF_i','DW','DW_i','reserve_asset_ratio','OFFICES','eqcaprat','precovdw')])) #summary statistic
dict1 <- c('dw_bin' = 'DW Prob', 'demand_so_reserves' = 'Demand Shock', 'reserve_asset_ratio' = 'RA Ratio',
'size' = 'Size', 'log(PPPLF+1)' = 'Log(PPPLF)', 'log(RCON0010)' = 'Log(Reserves)',
'eqcaprat' = 'Equity Cap Ratio', 'pppsores' = 'Demand Shock',
'pppsores x PPPLF_ind' = 'DS*PPPLF_ind', 'log(borr_total+1)' = 'Log(FF Borrowing)',
'log(pppsores)' = 'Log(Demand Shock)', 'log(PPP)' = 'Log(PPP)',
'dwbin_notest' = 'DW Prob', 'log(reserve_asset_ratio)' = 'Log RA Ratio',
'LF_30' = 'LF_{30}', 'log(eqcaprat)' = 'Log Equity Cap Ratio')
# Regressions ----
#Table 2: Linear model
t1 <- list()
t1[[1]] <- feols(log(dwsores+1) ~ log(pppsores+1)  + log(LF_30+1) + log(reserve_asset_ratio) + size + eqcaprat + rsa + lsa + dsa + log(npplsores+1) + econexpo + log(covexpo+1) + asinh(eci)| RSSD + Date  ,
sf3, panel.id = c('RSSD','Date'))
t1[[2]] <- update(t1[[1]], . ~. - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[3]] <- update(t1[[1]], dwbin_notest ~ . )
t1[[4]] <- update(t1[[3]], . ~ . - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[5]] <- update(t1[[2]], . ~. - i(bigsmall,log(pppsores+1)) |.| i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
t1[[6]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ log(n+1))
etable(t1, dict=dict1,
cluster = 'RSSD', tex = F)
#Robustness - Fixed Effects
t6 <- list()
t6[[1]] <- update(t1[[length(t1)]], .~. |. - RSSD - Date)
t6[[2]] <- update(t1[[length(t1)]], .~. |. - Date + month)
t6[[3]] <- update(t1[[length(t1)]], .~. |. - RSSD + State)
t6[[4]] <- update(t1[[length(t1)]], .~. |. - Date + month^State)
etable(t1[[length(t1)]], t6, dict=dict1, se='cluster', tex=F, cluster= 'RSSD',
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES'))
etable(t1[[length(t1)]], t6, dict=dict1, se='cluster', tex=F, cluster= 'RSSD',
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'))
t3 <- list()
t3[[1]] <- update(t1[[6]], se = 'white')
t3[[2]] <- update(t3[[1]], se = 'cluster', cluster = c('RSSD','Date'))
t3[[3]] <- update(t3[[1]], se = 'cluster', cluster = c('RSSD','month'))
t3[[4]] <- update(t3[[1]], se = 'cluster', cluster = 'FED')
t3[[5]] <- update(t3[[1]], se = 'cluster', cluster = 'State')
etable(t3, dict=dict1, tex=F,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'))
table(sf3$DW_i)
table(sf3$dwbin_notest)
t1[[6]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ log(n+1) + log(lag(pppsores)+1))
t1[[6]]
summary(t1[[6]],stage=1)
t1[[6]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ log(n+1) )
summary(t1[[6]],stage=1)
t1[[6]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ n )
summary(t1[[6]],stage=1)
t1[[6]]
t1[[6]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ log(n) )
t1[[6]]
t1[[6]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ log(n+1) )
#Table 2: Linear model
t1 <- list()
t1[[1]] <- feols(log(dwsores+1) ~ log(pppsores+1)  + log(LF_30+1) + log(reserve_asset_ratio) + size + eqcaprat + rsa + lsa + dsa + log(npplsores+1) + econexpo + log(covexpo+1) + asinh(eci)| RSSD + Date  ,
sf3, panel.id = c('RSSD','Date'))
t1[[2]] <- update(t1[[1]], . ~. - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[3]] <- update(t1[[1]], dwbin_notest ~ . )
t1[[4]] <- update(t1[[3]], . ~ . - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[5]] <- update(t1[[3]], .~. - log(pppsores+1) |.|  log(pppsores+1) ~ log(n+1))
t1[[6]] <- update(t1[[4]], .~. - i(bigsmall,log(pppsores+1)) |.|  i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
t1[[7]] <- update(t1[[2]], . ~. - i(bigsmall,log(pppsores+1)) |.| i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
t1[[8]] <- update(t1[[1]], . ~. - log(pppsores+1) - log(covexpo+1)|.| log(pppsores+1) ~ log(n+1) )
etable(t1, dict=dict1,
cluster = 'RSSD', tex = F)
t1[[8]] <- update(t1[[1]], . ~. - log(pppsores) - log(covexpo+1)|.| log(pppsores) ~ log(n) )
t1[[8]]
t1[[8]] <- update(t1[[1]], log(dwsores) ~. - log(pppsores) - log(covexpo+1)|.| log(pppsores) ~ log(n) )
t1[[8]]
t1[[8]] <- update(t1[[1]], . ~. - log(pppsores) |.| log(pppsores) ~ log(n+1) )
t1[[8]] <- update(t1[[1]], . ~. - log(pppsores+1) |.| log(pppsores+1) ~ log(n+1) )
t1[[8]]
t1
etable(t1)
etable(t1[[1]],t1[[8]],t1[[3]],t1[[5]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'))
etable(t1[[1]],t1[[8]],t1[[3]],t1[[5]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = T)
t6 <- list()
t6[[1]] <- update(t1[[length(t1)]], .~. |. - RSSD - Date)
t6[[2]] <- update(t1[[length(t1)]], .~. |. - Date + month)
t6[[3]] <- update(t1[[length(t1)]], .~. |. - RSSD + State)
t6[[4]] <- update(t1[[length(t1)]], .~. |. - Date + month^State)
etable(t1[[length(t1)]], t6, dict=dict1, se='cluster', tex=F, cluster= 'RSSD',
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'))
# clustering
t3 <- list()
t3[[1]] <- update(t1[[6]], se = 'white')
t3[[2]] <- update(t3[[1]], se = 'cluster', cluster = c('RSSD','Date'))
t3[[3]] <- update(t3[[1]], se = 'cluster', cluster = c('RSSD','month'))
t3[[4]] <- update(t3[[1]], se = 'cluster', cluster = 'FED')
t3[[5]] <- update(t3[[1]], se = 'cluster', cluster = 'State')
etable(t3, dict=dict1, tex=F,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'))
sf2$bigsmall <- ifelse(sf2$RCON2170 > 600000, 1, 0)
# Making the regression dataset
sf3 <- subset(sf2, Date >= as.Date('2020-04-03') & Date <= as.Date('2020-08-08'))
sf3 <- sf3[!duplicated(sf3[c("RSSD", "Date")]),]
sf3 <- sf3 %>% drop_na(RSSD, Date, State, size_quint)
sf3 <- sf3[!sf3$Reserves ==0,]
sf3 <- sf3[rowSums(is.na(sf3)) != ncol(sf3), ]
#stargazer(data.frame(sf3[,c('PPP','PPPLF','PPPLF_i','DW','DW_i','reserve_asset_ratio','OFFICES','eqcaprat','precovdw')])) #summary statistic
dict1 <- c('dw_bin' = 'DW Prob', 'demand_so_reserves' = 'Demand Shock', 'reserve_asset_ratio' = 'RA Ratio',
'size' = 'Size', 'log(PPPLF+1)' = 'Log(PPPLF)', 'log(RCON0010)' = 'Log(Reserves)',
'eqcaprat' = 'Equity Cap Ratio', 'pppsores' = 'Demand Shock',
'pppsores x PPPLF_ind' = 'DS*PPPLF_ind', 'log(borr_total+1)' = 'Log(FF Borrowing)',
'log(pppsores)' = 'Log(Demand Shock)', 'log(PPP)' = 'Log(PPP)',
'dwbin_notest' = 'DW Prob', 'log(reserve_asset_ratio)' = 'Log RA Ratio',
'LF_30' = 'LF_{30}', 'log(eqcaprat)' = 'Log Equity Cap Ratio')
# Regressions ----
#Table 2: Linear model
t1 <- list()
t1[[1]] <- feols(log(dwsores+1) ~ log(pppsores+1)  + log(LF_30+1) + log(reserve_asset_ratio) + size + eqcaprat + rsa + lsa + dsa + log(npplsores+1) + econexpo + log(covexpo+1) + asinh(eci)| RSSD + Date  ,
sf3, panel.id = c('RSSD','Date'))
t1[[2]] <- update(t1[[1]], . ~. - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[3]] <- update(t1[[1]], dwbin_notest ~ . )
t1[[4]] <- update(t1[[3]], . ~ . - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[5]] <- update(t1[[3]], .~. - log(pppsores+1) |.|  log(pppsores+1) ~ log(n+1))
t1[[6]] <- update(t1[[4]], .~. - i(bigsmall,log(pppsores+1)) |.|  i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
t1[[7]] <- update(t1[[2]], . ~. - i(bigsmall,log(pppsores+1)) |.| i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
t1[[8]] <- update(t1[[1]], . ~. - log(pppsores+1) |.| log(pppsores+1) ~ log(n+1) )
etable(t1, dict=dict1,
cluster = 'RSSD', tex = F)
# Library ----
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library(lubridate)
library('fuzzyjoin')
library(readr)
library('ggpubr')
library(marginaleffects)
library('timeperiodsR')
library('synthdid')
library('scales')
library('fitdistrplus')
library('ivprobit')
etable(t1[[2]],t1[[6]],t1[[4]],t1[[7]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = T)
etable(t1[[2]],t1[[6]],t1[[4]],t1[[7]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = F)
etable(t1[[1]],t1[[8]],t1[[3]],t1[[5]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = F)
etable(t1[[3]],t1[[6]],t1[[4]],t1[[5]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = F)
etable(t1[[2]],t1[[7]],t1[[4]],t1[[6]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = F)
sf2$bigsmall <- ifelse(sf2$RCON2170 > 50000000, 1, 0)
sf3 <- subset(sf2, Date >= as.Date('2020-04-03') & Date <= as.Date('2020-08-08'))
sf3 <- sf3[!duplicated(sf3[c("RSSD", "Date")]),]
sf3 <- sf3 %>% drop_na(RSSD, Date, State, size_quint)
sf3 <- sf3[!sf3$Reserves ==0,]
sf3 <- sf3[rowSums(is.na(sf3)) != ncol(sf3), ]
#stargazer(data.frame(sf3[,c('PPP','PPPLF','PPPLF_i','DW','DW_i','reserve_asset_ratio','OFFICES','eqcaprat','precovdw')])) #summary statistic
dict1 <- c('dw_bin' = 'DW Prob', 'demand_so_reserves' = 'Demand Shock', 'reserve_asset_ratio' = 'RA Ratio',
'size' = 'Size', 'log(PPPLF+1)' = 'Log(PPPLF)', 'log(RCON0010)' = 'Log(Reserves)',
'eqcaprat' = 'Equity Cap Ratio', 'pppsores' = 'Demand Shock',
'pppsores x PPPLF_ind' = 'DS*PPPLF_ind', 'log(borr_total+1)' = 'Log(FF Borrowing)',
'log(pppsores)' = 'Log(Demand Shock)', 'log(PPP)' = 'Log(PPP)',
'dwbin_notest' = 'DW Prob', 'log(reserve_asset_ratio)' = 'Log RA Ratio',
'LF_30' = 'LF_{30}', 'log(eqcaprat)' = 'Log Equity Cap Ratio')
# Regressions ----
#Table 2: Linear model
t1 <- list()
t1[[1]] <- feols(log(dwsores+1) ~ log(pppsores+1)  + log(LF_30+1) + log(reserve_asset_ratio) + size + eqcaprat + rsa + lsa + dsa + log(npplsores+1) + econexpo + log(covexpo+1) + asinh(eci)| RSSD + Date  ,
sf3, panel.id = c('RSSD','Date'))
t1[[8]] <- update(t1[[1]], . ~. - log(pppsores+1) |.| log(pppsores+1) ~ log(n+1) )
t1[[3]] <- update(t1[[1]], dwbin_notest ~ . )
t1[[5]] <- update(t1[[3]], .~. - log(pppsores+1) |.|  log(pppsores+1) ~ log(n+1))
t1[[2]] <- update(t1[[1]], . ~. - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[7]] <- update(t1[[2]], . ~. - i(bigsmall,log(pppsores+1)) |.| i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
t1[[4]] <- update(t1[[3]], . ~ . - log(pppsores+1) + i(bigsmall,log(pppsores+1)))
t1[[6]] <- update(t1[[4]], .~. - i(bigsmall,log(pppsores+1)) |.|  i(bigsmall,log(pppsores+1)) ~ i(bigsmall,log(n+1)))
etable(t1[[1]],t1[[8]],t1[[3]],t1[[5]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = F)
#interacted by large/small, 600m cutoff
etable(t1[[2]],t1[[7]],t1[[4]],t1[[6]], dict= dict1,
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'),
tex = F)
table(sf3$bigsmall)
etable(t1[[length(t1)]], t6, dict=dict1, se='cluster', tex=F, cluster= 'RSSD',
drop = c('Intercept','Size', 'eqcaprat','RA Ratio','Asset','Equity','FF Borrowing','precovdw','age','OFFICES','rsa','lsa','dsa','npplsores','econexpo','eci'))
