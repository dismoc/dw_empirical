hist(sf$r_delt)
plot(sf$r_delt)
feols(dw_bin ~ asinh(r_delt) | rssd, sf)
feglm(dw_bin ~ asinh(r_delt) | State, sf, family = binomial(link = "probit"))
sf
feglm(dw_bin ~ asinh(r_delt) | State + DateApproved, sf, family = binomial(link = "probit"))
subset(df, as.Date(Date) == as.Date('2020-03-31'))
subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')]
unique(subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')])
df$reserve_asset_ratio
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
sf <- left_join(sf, subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')], by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('PPP','PPPLF','DW','State'))
sf <- sf %>% select(-contains('Institution.ABA', 'n'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf[order(sf$rssd,sf$DateApproved),]
sf <- sf[order(sf$rssd,sf$DateApproved),]
subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')]sf
sf
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')]
sf[order(sf$rssd,sf$DateApproved),]
left_join(sf, subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')], by=c('rssd' = 'IDRSSD'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
temp
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('PPP','PPPLF','DW','State'))
sf <- sf %>% select(-contains('Institution.ABA', 'n'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf <- sf[order(sf$rssd,sf$DateApproved),]
feglm(log(DW+1) ~ log(PPP) | State, sf, family = binomial(link = "probit"))
feols(log(DW+1) ~ log(PPP) | State, sf)
feols(log(DW+1) ~ log(PPP) + log(PPPLF+1) | State, sf)
sf
feols(log(DW+1) ~ asinh(r_delt):reserve_asset_ratio | State, sf)
feols(log(DW+1) ~ asinh(r_delt)*reserve_asset_ratio | State, sf)
feols(asinh(DW) ~ asinh(r_delt)*reserve_asset_ratio | State, sf)
feols(asinh(DW) ~ asinh(r_delt)*reserve_asset_ratio | State, sf, se='white')
feols(dw_bin ~ asinh(r_delt)*reserve_asset_ratio | State, sf, se='white')
feols(dw_bin ~ asinh(r_delt)*reserve_asset_ratio | State, sf, )
feols(dw_bin ~ asinh(r_delt)*reserve_asset_ratio | State, sf)
sf$r_delt
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State, sf)
sf$DateApproved
month(sf$DateApproved)
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month(sf$DateApproved), sf)
sf$month <- month(sf$DateApproved)
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf)
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State , sf)
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + DateApproved, sf)
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, cluster='white')
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se='white')
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + DateApproved, sf, se='white')
feglm(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, family = binomial(link = "probit"))
feglm(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se = 'white', family = binomial(link = "probit"))
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se='white')
feglm(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se = 'white', family = binomial(link = "logit"))
descr(sf$r_delt)
100/(100^2 + 1)^(1/2)
descr(sf$dw_bin)
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se='white')
sf %>% mutate(decile = ntile(r_delt, 10))
sf %>% mutate(quintile = ntile(r_delt, 5))
sf <- sf %>% mutate(quantile = ntile(b, 10))
feols(dw_bin ~ quintile + reserve_asset_ratio | State + month, sf, se='white')
sf <- sf %>% mutate(quantile = ntile(b, 10))
feols(dw_bin ~ quintile + reserve_asset_ratio | State + month, sf, se='white')
sf
sf %>% mutate(quantile = ntile(b, 10))
sf %>% mutate(quantile = ntile(r_delt, 10))
sf <- sf %>% mutate(quintile = ntile(r_delt, 10))
feols(dw_bin ~ quintile + reserve_asset_ratio | State + month, sf, se='white')
feglm(dw_bin ~ quintile + reserve_asset_ratio | State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio | State + month, sf, se = 'white', family = binomial(link = "probit"))
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se='white')
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se='white')
df$reserve_loan_ratio <- df$RCON0010/df$RCON2122
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('PPP','PPPLF','DW','State'))
sf <- sf %>% select(-contains('Institution.ABA', 'n'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf <- sf[order(sf$rssd,sf$DateApproved),]
sf$month <- month(sf$DateApproved)
sf <- sf %>% mutate(quintile = ntile(r_delt, 10))
sf
sf <- sf %>% select(-contains('Institution.ABA'),-contains('n'))
sf
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('PPP','PPPLF','DW','State'))
sf <- sf %>% select(-contains('Institution.ABA'),-contains('n'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf <- sf[order(sf$rssd,sf$DateApproved),]
sf$month <- month(sf$DateApproved)
sf <- sf %>% mutate(quintile = ntile(r_delt, 10))
sf
temp
unique(temp$reserve_loan_ratio)
descr(temp$reserve_loan_ratio)
temp
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('PPP','PPPLF','DW','State'))
sf <- sf %>% select(-contains('Institution.ABA'),-contains('n'))
sf
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('PPP','PPPLF','DW','State'))
sf
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf <- sf[order(sf$rssd,sf$DateApproved),]
sf$month <- month(sf$DateApproved)
sf <- sf %>% mutate(quintile = ntile(r_delt, 10))
sf
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio | State + month, sf, se='white')
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio | State + month, sf, se='white')
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio  | State + month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
sf
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('DateApproved','InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('Date','PPP','PPPLF','DW','State'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf <- sf[order(sf$rssd,sf$DateApproved),]
sf$month <- month(sf$DateApproved)
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
# Elasticity regressions
feols(log(DW+1) ~ r_delt + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
sf
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('DateApproved','InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('Date','PPP','PPPLF','DW','State'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- sf$PPPLF- sf$PPP
sf <- sf[order(sf$rssd,sf$DateApproved),]
sf$month <- month(sf$DateApproved)
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
sf <- sf[order(sf$rssd,sf$Date),]
sf$month <- month(sf$Date)
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
sf
# Binary regressions + robustness
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio | State + month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
sf$r_delt <- -sf$PPPLF + sf$PPP
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
# Binary regressions + robustness
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio | State + month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
sf
View(sf)
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='cluster') #increasing reserve demand by 1 decile increases borrowing probability by
dwborrow %>% count(Date)
dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date)
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),])
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum)
# Show the number of discount window borrowing in each quarter
left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
# Show the number of discount window borrowing in each quarter
plot1 <- left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
setnames(plot1, old=c('n','Loan.amount'), new=c('Count','Amount'))
xtable(plot1)
library('xtable')
xtable(plot1)
plot1
plot1$Date <- as.chracter(plot1$Date)
plot1$Amount <- paste0(plot1$Amount/1e9,'B')
plot1
# Show the number of discount window borrowing in each quarter
plot1 <- left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
setnames(plot1, old=c('n','Loan.amount'), new=c('Count','Amount'))
plot1$Date <- as.chracter(plot1$Date)
plot1$Amount <- paste0(round(plot1$Amount/1e9,2),' B')
xtable(plot1)
plot1$Date <- as.character(plot1$Date)
xtable(plot1)
print(xtable(plot1))
print(xtable(plot1), include.rownames=FALSE)
print(xtable(plot1), include.rownames=FALSE)
aggregate(reserve_deposit_ratio ~ Date, df)
aggregate(reserve_deposit_ratio ~ Date, df, mean)
plot1 <- left_join(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], mean))
# Show the number of discount window borrowing in each quarter
plot1 <- left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
plot1 <- left_join(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], mean))
plot1
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], mean)
plot1 <- merge(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], mean))
plot1
plot1 <- left_join(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], mean), by='Date')
plot1
# Show the number of discount window borrowing in each quarter
plot1 <- left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
plot1 <- left_join(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], mean), by='Date')
plot1
setnames(plot1, old=c('n','Loan.amount.x','Loan.amount.y'), new=c('Count','Amount','Mean'))
plot1
plot1$Date <- as.character(plot1$Date)
plot1$Amount <- paste0(round(plot1$Amount/1e9,2),' B')
plot1$Mean <- paste0(round(plot1$Mean/1e6,2),' M')
plot1
print(xtable(plot1), include.rownames=FALSE)
# Show the number of discount window borrowing in each quarter
plot1 <- left_join(dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),] %>% count(Date),
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], sum))
plot1 <- left_join(plot1,
aggregate(Loan.amount ~ Date, dwborrow[as.Date(dwborrow$Date) > as.Date('2019-06-01'),], median), by='Date')
setnames(plot1, old=c('n','Loan.amount.x','Loan.amount.y'), new=c('Count','Amount','Mean'))
plot1$Date <- as.character(plot1$Date)
plot1$Amount <- paste0(round(plot1$Amount/1e9,2),' B')
plot1$Mean <- paste0(round(plot1$Mean/1e6,2),' M')
print(xtable(plot1), include.rownames=FALSE)
plot1
pppm
dwborrow1 <- dwborrow
dwborrow1$month <- month(dwborrow$Date)
rm(dwborrow1)
aggregate(RCON2200 ~ Date, df, sum)
15519842744/13220600835
unique(pppm$DateApproved)
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(nonppp_loans,RCONLG27) ~ Date, plot1, sum)
plot1 <- plot1 %>% gather('Loan Type', val,-Date)
plot1$Date <- as.Date(plot1$Date)
plot1$`Loan Type` <- ifelse(plot1$`Loan Type` == 'RCONLG27', 'PPP Loans', 'Non-PPP Loans')
plot1
plot1 <- subset(df, as.Date(Date) >= as.Date('2019-01-01'))
plot1[is.na(plot1$RCONLG27) == TRUE,'RCONLG27'] <- 0
plot1 <- aggregate(cbind(nonppp_loans,RCONLG27) ~ Date, plot1, sum)
ploit1
plot1
plot1$RCONLG27/(plot1$RCONLG27 + plot1$nonppp_loans)
pppm
quantile(pppm$InitialApprovalAmount, .8)
quantile(pppm$InitialApprovalAmount, .9)
quantile(pppm$InitialApprovalAmount, .95)
quantile(pppm$InitialApprovalAmount, .99)
quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01))
plot(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))
ggplot(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))
ggplot(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01))) + geom_line
ggplot(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01))) + geom_line()
data.frame(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))
data.frame(c('Percentile','Value') = quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))
data.frame(Percentile = quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))
data.frame(Percentile = quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01))[1])
data.frame(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))[,1]
data.frame(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))[,0]
data.frame(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))[,2]
data.frame(quantile(pppm$InitialApprovalAmount, seq(0,1, by=.01)))[,1]
pplf
descr(pplf$processing_time)
sf
# Aggregate Data 2: correlation between dw borrowing (binary) and uncovered ppp loans (ppp loans - ppplf advance) -------
# Bank Level Data
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
sf
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio','RCON0010')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('DateApproved','InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('Date','PPP','PPPLF','DW','State'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- -sf$PPPLF + sf$PPP
sf <- sf[order(sf$rssd,sf$Date),]
sf$month <- month(sf$Date)
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
sf
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('IDRSSD','reserve_asset_ratio','reserve_loan_ratio','RCON0010')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('DateApproved','InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('Date','PPP','PPPLF','DW','State'))
sf
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- -sf$PPPLF + sf$PPP
sf <- sf[order(sf$rssd,sf$Date),]
sf$month <- month(sf$Date)
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
sf$r_delt
sf$demand_so_reserves <- sf$r_delt/sf$RCON0010
sf$demand_so_reserves
feols(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio | State + month, sf, se='white')
descr(sf$demand_so_reserves)
sf$demand_so_reserves <- sf$r_delt/(sf$RCON0010*1000)
feols(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio | State + month, sf, se='white')
descr(sf$demand_so_reserves)
sf$RCON0010
display(sf$RCON0010)
sf[!is.na(RCON0010),'RCON0010']
sf[!is.na(sf$RCON0010),'RCON0010']
unique(sf[!is.na(sf$RCON0010),'RCON0010'])
quantile(sf$demand_so_reserves, rep(0,1,by=.05))
quantile(sf$demand_so_reserves, rep(0,1,by=.05), na.rm=TRUE)
quantile(sf$demand_so_reserves, seq(0,1,by=.05))
quantile(sf$demand_so_reserves, swq(0,1,by=.05), na.rm=TRUE)
quantile(sf$demand_so_reserves, seq(0,1,by=.05), na.rm=TRUE)
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(asinh(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Binary regressions + robustness
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio | State + month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se = 'white', family = binomial(link = "probit"))
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio| State, sf, se = 'white', family = binomial(link = "probit"))
df$bigsmall
sf <- left_join(pppm,unique(pplf[,c('Institution.RSSD','Institution.ABA')]),by=c('rssd' = 'Institution.RSSD')) %>% select(-contains("..."))
sf <- full_join(sf, data.frame(aggregate(Original.Outstanding.Advance.Amount ~ Institution.RSSD + Date.Of.Advance, pplf, sum)),
by=c('rssd' = 'Institution.RSSD', 'DateApproved' = 'Date.Of.Advance')) %>% select(-contains("..."))
sf <- left_join(sf,dwborrow[,c('Loan.date','Borrower.ABA.number','Loan.amount')], by=c('Institution.ABA' = 'Borrower.ABA.number', 'DateApproved' = 'Loan.date'))
temp <- subset(df, as.Date(Date) == as.Date('2020-03-31'))[,c('size','IDRSSD','reserve_asset_ratio','reserve_loan_ratio','RCON0010')]
temp$IDRSSD <- as.numeric(as.character(temp$IDRSSD))
sf <- left_join(sf, temp, by=c('rssd' = 'IDRSSD'))
sf[is.na(sf$Original.Outstanding.Advance.Amount),c('Original.Outstanding.Advance.Amount')] <- 0
sf[is.na(sf$Loan.amount),c('Loan.amount')] <- 0
setnames(sf, old=c('DateApproved','InitialApprovalAmount', 'Original.Outstanding.Advance.Amount', 'Loan.amount','OriginatingLenderState'),
new = c('Date','PPP','PPPLF','DW','State'))
sf$dw_bin <- ifelse(sf$DW > 0, 1, 0)
sf$r_delt <- -sf$PPPLF + sf$PPP
sf <- sf[order(sf$rssd,sf$Date),]
sf$month <- month(sf$Date)
sf <- sf %>% mutate(quintile = ntile(r_delt, 5))
sf$demand_so_reserves <- sf$r_delt/(sf$RCON0010*1000)
# Regression on demand share of reserves using reserve data from Q1 2020
feols(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white')
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State, sf, se = 'white', family = binomial(link = "probit"))
feols(asinh(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Binary regressions + robustness
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se = 'white', family = binomial(link = "probit"))
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
sf
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State, sf, se = 'white', family = binomial(link = "probit"))
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se = 'white', family = binomial(link = "probit"))
sf
# Regression on demand share of reserves using reserve data from Q1 2020
feols(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| rssd + month, sf, se='white')
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| rssd + month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| rssd + month, sf, se = 'white', family = binomial(link = "probit"))
feols(asinh(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| rssd + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| rssd + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| rssd + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State + month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Regression on demand share of reserves using reserve data from Q1 2020
feols(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State:month, sf, se='white')
# Regression on demand share of reserves using reserve data from Q1 2020
feols(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white')
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "probit"))
feols(asinh(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Binary regressions + robustness
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "probit"))
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "probit"))
feols(log(DW) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW+1) ~ demand_so_reserves + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
# Binary regressions + robustness
feols(dw_bin ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white')
feols(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "logit"))
feglm(dw_bin ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se = 'white', family = binomial(link = "probit"))
# Elasticity regressions
feols(asinh(DW) ~ asinh(r_delt) + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
feols(log(DW) ~ quintile + reserve_asset_ratio + reserve_loan_ratio + size| State^month, sf, se='white') #increasing reserve demand by 1 decile increases borrowing probability by
