base
mapply("*", base[3:61], sci)
base[3:61]
sci
0.9126801*85.04
mapply("*", base[intersect(names(base), names(sci))],
sci[intersect(names(base), names(sci))])
sci <- data.frame(read_delim("D:/Research/DW lending empirical/Data/SOD/CI/coincident-revised.csv",show_col_types = FALSE))
sci$time <- as.Date(timeLastDayInQuarter(as.Date(sci$Date,'%m/%d/%Y')))
sci <- sci[seq(1, nrow(sci), 3), ][2:ncol(sci)]
join <- data.frame(base[,c(1:2,62:63)],
mapply("*", base[intersect(names(base), names(sci))],
sci[intersect(names(base), names(sci))]))
join <- data.frame(join[,1:4], exposure = rowSums(join[5:ncol(join)], na.rm = TRUE))
join <- join[!is.na(join$RSSDHCR),]
join
descr(join$exposure)
library('summarytools')
descr(join$exposure)
rm(sod, sodn, sci, base)
write.csv(join,"D:\\Research\\DW lending empirical\\Data\\sod_merged.csv")
df$cert
df[, -select %in% c('exposure')]
df[, select(-contains("exposure"))]
select(df, -contains('exposure'))
df<- select(df, -contains('exposure'))
df$cert
is.numeric(df$cert)
left_join(df, join, by= c('cert' = 'CERT', 'Date'))
join$CERT <- as.numeric(join$CERT)
left_join(df, join, by= c('cert' = 'CERT', 'Date'))
as.Date(join$Date)
join$Date <- as.Date(join$Date)
left_join(df, join, by= c('cert' = 'CERT', 'Date'))
df$Date
as.Date(df$Date)
df$Date <- as.Date(df$Date)
left_join(df, join, by= c('cert' = 'CERT', 'Date'))
class(df$Date)
class(join$Date)
left_join(data.frame(df), data.frame(join), by= c('cert' = 'CERT', 'Date'))
class(df$cert)
class(join$CERT)
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('lubridate')
effr <- read_csv("D:/Research/DW lending empirical/Data/effr_range.csv")
dwborrow <- read_csv("D:/Research/DW lending empirical/Data/dwborrow.csv")
call_rep <- read_csv("D:/Research/DW lending empirical/Data/call_rep_full.csv")
int_rate <- read_excel("D:/Research/DW lending empirical/Data/int_rates.xls")
sdc <- read_csv("D:/Research/DW lending empirical/Data/sdc_full.csv")
def <- read_csv("D:/Research/DW lending empirical/Data/defs.csv")
inst <-read_csv("D:/Research/DW lending empirical/Data/INSTITUTIONS2.CSV")
att <- read_csv("D:/Research/DW lending empirical/Data/ffiec/Atrributes_merged.csv")
int_rate$Date <- as.Date(int_rate$Date)
q <- c("0331","0630","0930","1231")
y <- c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020")
dwbsub <- subset(dwborrow, Type.of.credit == "Primary Credit")
dwbsub <- subset(dwbsub, dwbsub$Loan.amount >= 1000000)
dwbsub$Date <- data.frame(timeLastDayInQuarter(dwbsub$Loan.date, format = "%Y-%m-%d", zone = "", FinCenter = ""))$GMT.x..i..
dwbsub$repay <- (dwbsub$Interest.rate*dwbsub$Term/36000)*dwbsub$Loan.amount
dcomb <- merge(merge(aggregate(Term ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum),
aggregate(Loan.amount*Term ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum)),
aggregate(repay ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum))
rm(dwbsub, dwborrow)
dcomb$avg.int <- 36000*dcomb$repay/dcomb$`Loan.amount * Term`
setnames(dcomb, old = c('Borrower.ABA.number','Date','Term','Loan.amount * Term','repay','avg.int'),
new = c('ABA_routing','Date','dw_freq','dw_quant','repay','avg_int'))
dcomb$ABA_routing <- as.numeric(dcomb$ABA_routing)
att$ABA_routing <- att$ID_ABA_PRIM; att$IDRSSD <- att$`#ID_RSSD`
dc <- left_join(dcomb, att[,c('ABA_routing','IDRSSD','D_DT_START','ID_FDIC_CERT','ID_OCC')], by = c('ABA_routing'))
inst$IDRSSD <- inst$FED_RSSD
df <- call_rep %>% left_join(inst[,c('FED','FDICREGN','IDRSSD','OFFICES','BKCLASS','OFFDOM','OFFFOR','STMULT','CHRTAGNT','ESTYMD')], by=('IDRSSD'),
suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
df <- df %>% full_join(sdc, by=c('IDRSSD','Date'), suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
rm(sdc)
df <- df %>% left_join(dc, by=c('IDRSSD','Date'), suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
rm(dc, dcomb, att)
rm(inst, call_rep)
# Adding new columns ----
# Two types of access definition, dwaccess_2 is access after first loan, dwaccess_1 is access for all sample time period
#dwaccess_1
ag <- aggregate(dw_freq ~ IDRSSD, data=df, FUN = sum, na.rm = TRUE)
setnames(ag, old=c('dw_freq'), new=c('freq'))
df1 <- left_join(df, ag)
df1$dwaccess_1 <- ifelse(df1$freq > 0, 1, 0)
df1$dwaccess_1[is.na(df1$dwaccess_1)] = 0
df1 <- df1[ , -which(names(df1) %in% c("freq"))]
df <- df1
rm(df1,ag)
#dwaccess_2
df1 = df %>%
arrange(IDRSSD,Date) %>%
group_by(IDRSSD) %>%
mutate(agg_access =rollapplyr(dw_freq, 60, sum, partial = TRUE, na.rm = TRUE) )
df1$dwaccess_2 <- ifelse(df1$agg_access > 0, 1, 0)
df1 <- df1[ , -which(names(df1) %in% c("agg_access"))]
df <- df1
rm(df1)
#Adding additional series - reserve asset ratio and reserve deposit ratio,
df$dw_freq[is.na(df$dw_freq)] <- 0
df$dwborrow_bin <- ifelse(df$dw_freq > 0, 1, 0)
df$reserve_asset_ratio <- df$RCON0010/df$RCON2170
df$reserve_deposit_ratio <- df$RCON0010/df$RCON2215
df$dwborrow_cov <- ifelse(df$dwborrow_bin == 1 & as.Date(df$Date) >= as.Date('2020-03-31'), 1, 0)
rm(effr, int_rate)
# Important Info
df$bigsmall <- ifelse(df$RCON2170 >= 1000000, 'Large', 'Small')
# CAMELS - Duchin Sosyura (2014)----
# Capital Adequacy
df$ca <- Winsorize(df$RCON8274/df$RCONA223, probs=c(.01,.99),na.rm = TRUE)
#Asset quality
df$aq <- -(df$RCON1407 + df$RCON1403)/df$RCON2122
# Capital ratios - Duchin Sosyura (2014) ----
df$t1riskrat <- df$RCON7206
df$totriskrat <- df$RCON7205
df$eqcaprat <- df$RCONG105/df$RCON2170
# Bank fundamentals - Duchin Sosyura (2014) ----
df$size <- Winsorize(log(df$RCON2170),probs=c(.01,.99), na.rm = TRUE)
df$age <- year(df$Date) - year(df$ESTYMD)
join <- read_csv("D:/Research/DW lending empirical/Data/sod_merged.csv")
join$CERT <- as.numeric(join$CERT)
join$Date <- as.Date(join$Date)
df$Date <- as.Date(df$Date)
df <- left_join(data.frame(df), data.frame(join), by= c('cert' = 'CERT', 'Date'))
df$lent_total <- (df$RCONB987 + df$RCONB989)
df$lent_total[IsZero(df$lent_total)] = NA
df$int_paid_ib <- Winsorize(df$RIAD4020*100/(df$lent_total),probs = c(0.05, 0.95), na.rm = TRUE)
df$borr_total <- (df$RCONB993 + df$RCONB995)
df$borr_total[IsZero(df$borr_total)] = NA
df$int_got_ib <- Winsorize(df$RIAD4180*100/(df$borr_total),probs = c(0.05, 0.95), na.rm = TRUE)
# Library ----
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library('fuzzyjoin')
library('lubridate')
df$int_paid_ib <- Winsorize(df$RIAD4020*100/(df$lent_total),probs = c(0.05, 0.95), na.rm = TRUE)
df$lent_total <- (df$RCONB987 + df$RCONB989)
df$lent_total[IsZero(df$lent_total)] = NA
df$int_paid_ib <- Winsorize(df$RIAD4020*100/(df$lent_total),probs = c(0.05, 0.95), na.rm = TRUE)
df$borr_total <- (df$RCONB993 + df$RCONB995)
df$borr_total[IsZero(df$borr_total)] = NA
df$int_got_ib <- Winsorize(df$RIAD4180*100/(df$borr_total),probs = c(0.05, 0.95), na.rm = TRUE)
# Dependent variables from Acharya Mora (2015) ----
df$int_ltd_ann <- Winsorize((df$RIADA517/df$RCONA514)*400,probs = c(0.01, 0.99), na.rm = TRUE) #interest rate, large time deposits (implicit)
df$int_cd_ann <- Winsorize(((df$RIAD4508 + df$RIAD0093)/df$RCONA514)*400,probs = c(0.01, 0.99), na.rm = TRUE) #interest rate, core deposits (implicit)
df$qdep_growth <- Winsorize((df$RCON2200-lag(df$RCON2200))/lag(df$RCON2200),probs = c(0.01, 0.99), na.rm = TRUE) #deposit growth rates
df$qcordep_growth <- Winsorize((df$RCON2215 + df$RCON6810 + df$RCON0352 + df$RCON6648 - (lag(df$RCON2215) + lag(df$RCON6810) + lag(df$RCON0352) + lag(df$RCON6648)))/
1664312391961:(lag(df$RCON2215) + lag(df$RCON6810) + lag(df$RCON0352) + lag(df$RCON6648)),probs = c(0.01, 0.99), na.rm = TRUE) #core deposit growth rates
df$ci_loans <- ifelse(is.na(df$RCON1766) == TRUE, df$RCON1763+df$RCON1764, df$RCON1766)
df$ci_loans_growth <- Winsorize((ifelse(is.na(df$RCON1766) == TRUE, df$RCON1763+df$RCON1764, df$RCON1766) -
1664312394379:ifelse(is.na(lag(df$RCON1766)) == TRUE, lag(df$RCON1763)+lag(df$RCON1764), lag(df$RCON1766)))/
1664312394381:ifelse(is.na(lag(df$RCON1766)) == TRUE, lag(df$RCON1763)+lag(df$RCON1764), lag(df$RCON1766)),probs = c(0.01, 0.99), na.rm = TRUE)
df$loans <- df$RCON2122
df$loans_growth <- Winsorize((df$RCON2122 - lag(df$RCON2122))/lag(df$RCON2122),probs = c(0.01, 0.99), na.rm = TRUE)
df$loans_growth
df$coredep
df$qdep_growth
# Comparing exposure to local economic condition (measured by Philly coincident index) between large and small banks
subset(df, as.Date(Date) >= as.Date('2019-09-30') & dwborrow_bin == 1) %>% count(Date, bigsmall)
# Comparing exposure to local economic condition (measured by Philly coincident index) between large and small banks
aggregate(exposure ~ Date + dwborrow_bin, subset(df, as.Date(Date) >= as.Date('2019-09-30')), FUN = mean)
feols(dwborrow_bin ~ exposure, df)
feols(dwborrow_bin ~ exposure | IDRSSD + Date, df)
feols(dwborrow_bin ~ exposure | IDRSSD, df)
feols(dwborrow_bin ~ exposure | Date, df)
feols(dwborrow_bin ~ age+size+exposure | Date, df)
# Bank fundamentals - Duchin Sosyura (2014) ----
df$size <- Winsorize(log(df$RCON2170),probs=c(.01,.99), na.rm = TRUE)
feols(dwborrow_bin ~ age+size+exposure | Date, df)
feols(dwborrow_bin*100 ~ age+size+exposure | Date, df)
df$reserve_asset_ratio
df$reserve_deposit_ratio
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date, df)
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date, df, FUN = mean())
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date, df, FUN = mean
)
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('DescTools')
library('summarytools')
library(gtools)
library('fuzzyjoin')
library('lubridate')
descr(df$reserve_deposit_ratio)
descr(df$reserve_asset_ratio)
df$reserve_deposit_ratio <- Winsorize(df$RCON0010/df$RCON2215, probs = c(0.01, 0.99), na.rm = TRUE)
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date, df, FUN = mean)
descr(Winsorize(df$RCON0010/df$RCON2215, probs = c(0.01, 0.99), na.rm = TRUE))
is.infinite(df$reserve_deposit_ratio)
table(is.infinite(df$reserve_deposit_ratio))
df[is.infinite(df$reserve_deposit_ratio)]
df[is.infinite(df$reserve_deposit_ratio),]
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')]
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')] <- NA
df$reserve_deposit_ratio <- df$RCON0010/df$RCON2215
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')] <- NA
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date, df, FUN = mean)
df$reserve_deposit_ratio <- df$RCON0010/df$RCON2200
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')] <- NA
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date, df, FUN = mean)
aggregate(cbind(reserve_asset_ratio, reserve_deposit_ratio) ~ Date + dwborrow_cov, df, FUN = mean)
# Reading in data ----
dwdat <- data.frame(read_excel("D:/Research/DW lending empirical/Data/dw_borrow/dw_data_2010_q3.xls"))[c(1:15)]
dwdat_2 <- data.frame(read_excel("D:/Research/DW lending empirical/Data/dw_borrow/dw_data_2010_q4.xls",skip=3))[c(1:15)]
colnames(dwdat_2) <- colnames(dwdat)
smartbind(dwdat,dwdat_2
)
dwborrow <- smart(dwdat,dwdat_2); rm(dwdat_2)
q <- c("q1","q2","q3","q4")
y <- c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020")
list <- list.files(path="D:/Research/DW lending empirical/Data/dw_borrow/", pattern=".xls")
list
i = 2
paste0("D:/Research/DW lending empirical/Data/dw_borrow/",list[i])
# Reading in data ----
q <- c("q1","q2","q3","q4")
y <- c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020")
list <- list.files(path="D:/Research/DW lending empirical/Data/dw_borrow/", pattern=".xls")
dwborrow <- data.frame(read_excel("D:/Research/DW lending empirical/Data/dw_borrow/dw_data_2010_q3.xls"))[c(1:15)]
colnames(dwdat_2) <- colnames(dwdat)
dwborrow <- smart(dwborrow,dwdat_2)
for (i in 2:length(list)) {
dwdat <- data.frame(read_excel(paste0("D:/Research/DW lending empirical/Data/dw_borrow/",list[i]),skip=3))[c(1:15)]
colnames(dwdat) <- colnames(dwborrow)
dwborrow <- smart(dwborrow,dwdat);
}
for (i in 2:length(list)) {
dwdat <- data.frame(read_excel(paste0("D:/Research/DW lending empirical/Data/dw_borrow/",list[i]),skip=3))[c(1:15)]
colnames(dwdat) <- colnames(dwborrow)
dwborrow <- smartbind(dwborrow,dwdat);
}
warnings()
descr(dwborrow$Loan.date)
summary(dwborrow$Loan.date)
View(dwborrow)
is.na(dwborrow)
df[rowSums(is.na(df)) != ncol(df), ]
dwborrow[rowSums(is.na(dwborrow)) != ncol(dwborrow), ]
dwborrow <- dwborrow[rowSums(is.na(dwborrow)) != ncol(dwborrow), ]
rm(dwdat)
rm(dwdat_2)
dwborrow$Loan.date <- as.Date(dwborrow$Loan.date)
dwborrow$Maturity.date <- as.Date(dwborrow$Maturity.date)
dwborrow$Repayment.date <- as.Date(dwborrow$Repayment.date)
dwborrow$Year <- year(dwborrow$Loan.date)
dwborrow$Type.of.credit <- ifelse(dwborrow$Type.of.credit == "Primary Credit*", "Primary Credit", dwborrow$Type.of.credit)
dwborrow$Type.of.credit <- ifelse(dwborrow$Type.of.credit == "Secondary Credit*", "Secondary Credit", dwborrow$Type.of.credit)
dwborrow$Type.of.credit <- ifelse(dwborrow$Type.of.credit == "Seasonal Credit*", "Seasonal Credit", dwborrow$Type.of.credit)
# Number of borrowings in each quarter that is listed as primary credit
dwborrow$Date <- data.frame(timeLastDayInQuarter(dwborrow$Loan.date, format = "%Y-%m-%d", zone = "", FinCenter = ""))$GMT.x..i..
ggplot(aggregate(Term ~ Type.of.credit + Year, dwborrow, FUN = sum), aes(x = Year, y=Term, color=Type.of.credit)) + geom_line()
ggplot(aggregate(Term ~ Type.of.credit + Date, dwborrow, FUN = sum), aes(x = Date, y=Term, color=Type.of.credit)) + geom_line()
ggplot(aggregate(Term ~ Type.of.credit + Year, dwborrow, FUN = sum), aes(x = Date, y=Term, color=Type.of.credit)) + geom_line()
ggplot(aggregate(Term ~ Type.of.credit + Year, dwborrow, FUN = sum), aes(x = Year, y=Term, color=Type.of.credit)) + geom_line()
p1 <- dwborrow %>% count(Borrower.ABA.number)
p1 <- subset(p1, n >0)
p1 <- data.frame(table(p1$n))
p1$Var1 <- as.numeric(p1$Var1)
p1 <-data.frame(Frequency = 1:31, Count = c(p1$Freq[1:30],  colSums(p1[p1$Var1 > 30,])[2] ))
ggplot(p1, aes(x=Frequency, y = Count)) + geom_point()
write.csv(dwborrow,"D:\\Research\\DW lending empirical\\Data\\dwborrow1.csv")
write.csv(dwborrow,"D:\\Research\\DW lending empirical\\Data\\dwborrow.csv")
library(tidyverse)
library(mlr3verse)
library(plm)
library(pglm)
library(readxl)
library(dplyr)
library('DataCombine')
library('stargazer')
library('simpleboot')
library('Rpdb')
library('data.table')
library(ggplot2)
library('zoo')
library('fixest')
library('timeDate')
library('lubridate')
rm(p1)
rm(df, join)
effr <- read_csv("D:/Research/DW lending empirical/Data/effr_range.csv")
dwborrow <- read_csv("D:/Research/DW lending empirical/Data/dwborrow.csv")
call_rep <- read_csv("D:/Research/DW lending empirical/Data/call_rep_full.csv")
int_rate <- read_excel("D:/Research/DW lending empirical/Data/int_rates.xls")
sdc <- read_csv("D:/Research/DW lending empirical/Data/sdc_full.csv")
def <- read_csv("D:/Research/DW lending empirical/Data/defs.csv")
inst <-read_csv("D:/Research/DW lending empirical/Data/INSTITUTIONS2.CSV")
att <- read_csv("D:/Research/DW lending empirical/Data/ffiec/Atrributes_merged.csv")
int_rate$Date <- as.Date(int_rate$Date)
q <- c("0331","0630","0930","1231")
y <- c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020")
dwbsub <- subset(dwborrow, Type.of.credit == "Primary Credit")
dwbsub <- subset(dwbsub, dwbsub$Loan.amount >= 1000000)
dwbsub$Date <- data.frame(timeLastDayInQuarter(dwbsub$Loan.date, format = "%Y-%m-%d", zone = "", FinCenter = ""))$GMT.x..i..
dwbsub$repay <- (dwbsub$Interest.rate*dwbsub$Term/36000)*dwbsub$Loan.amount
dcomb <- merge(merge(aggregate(Term ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum),
aggregate(Loan.amount*Term ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum)),
aggregate(repay ~ Borrower.ABA.number + Date, data = dwbsub, FUN = sum))
rm(dwbsub, dwborrow)
dcomb$avg.int <- 36000*dcomb$repay/dcomb$`Loan.amount * Term`
setnames(dcomb, old = c('Borrower.ABA.number','Date','Term','Loan.amount * Term','repay','avg.int'),
new = c('ABA_routing','Date','dw_freq','dw_quant','repay','avg_int'))
dcomb$ABA_routing <- as.numeric(dcomb$ABA_routing)
att$ABA_routing <- att$ID_ABA_PRIM; att$IDRSSD <- att$`#ID_RSSD`
dc <- left_join(dcomb, att[,c('ABA_routing','IDRSSD','D_DT_START','ID_FDIC_CERT','ID_OCC')], by = c('ABA_routing'))
inst$IDRSSD <- inst$FED_RSSD
df <- call_rep %>% left_join(inst[,c('FED','FDICREGN','IDRSSD','OFFICES','BKCLASS','OFFDOM','OFFFOR','STMULT','CHRTAGNT','ESTYMD')], by=('IDRSSD'),
suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
df <- df %>% full_join(sdc, by=c('IDRSSD','Date'), suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
rm(sdc)
df <- df %>% left_join(dc, by=c('IDRSSD','Date'), suffix = c("",".y")) %>% select(-ends_with(".y"), -contains("..."))
rm(dc, dcomb, att)
rm(inst, call_rep)
# Adding new columns ----
# Two types of access definition, dwaccess_2 is access after first loan, dwaccess_1 is access for all sample time period
#dwaccess_1
ag <- aggregate(dw_freq ~ IDRSSD, data=df, FUN = sum, na.rm = TRUE)
setnames(ag, old=c('dw_freq'), new=c('freq'))
df1 <- left_join(df, ag)
df1$dwaccess_1 <- ifelse(df1$freq > 0, 1, 0)
df1$dwaccess_1[is.na(df1$dwaccess_1)] = 0
df1 <- df1[ , -which(names(df1) %in% c("freq"))]
df <- df1
rm(df1,ag)
#dwaccess_2
df1 = df %>%
arrange(IDRSSD,Date) %>%
group_by(IDRSSD) %>%
mutate(agg_access =rollapplyr(dw_freq, 60, sum, partial = TRUE, na.rm = TRUE) )
df1$dwaccess_2 <- ifelse(df1$agg_access > 0, 1, 0)
df1 <- df1[ , -which(names(df1) %in% c("agg_access"))]
df <- df1
rm(df1)
#Adding additional series - reserve asset ratio and reserve deposit ratio,
df$dw_freq[is.na(df$dw_freq)] <- 0
df$dwborrow_bin <- ifelse(df$dw_freq > 0, 1, 0)
df$reserve_asset_ratio <- df$RCON0010/df$RCON2170
df$reserve_deposit_ratio <- df$RCON0010/df$RCON2200
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')] <- NA
df$dwborrow_cov <- ifelse(df$dwborrow_bin == 1 & as.Date(df$Date) >= as.Date('2020-03-31'), 1, 0)
rm(effr, int_rate)
#Save File ----
write.csv(df,"D:\\Research\\DW lending empirical\\Data\\merged_cov.csv")
df$bigsmall2 <- ifelse(df$RCON2170 >= 300000, 'Large', 'Small')
df$bigsmall <- ifelse(df$RCON2170 >= 1000000, 'Large', 'Small')
df$bigsmall2 <- ifelse(df$RCON2170 >= 300000, 'Large', 'Small')
# Dependent variables from Acharya Mora (2015) ----
df$int_ltd_ann <- Winsorize((df$RIADA517/df$RCONA514)*400,probs = c(0.01, 0.99), na.rm = TRUE) #interest rate, large time deposits (implicit)
df$int_cd_ann <- Winsorize(((df$RIAD4508 + df$RIAD0093)/df$RCONA514)*400,probs = c(0.01, 0.99), na.rm = TRUE) #interest rate, core deposits (implicit)
df$qdep_growth <- Winsorize((df$RCON2200-lag(df$RCON2200))/lag(df$RCON2200),probs = c(0.01, 0.99), na.rm = TRUE) #deposit growth rates
df$qcordep_growth <- Winsorize((df$RCON2215 + df$RCON6810 + df$RCON0352 + df$RCON6648 - (lag(df$RCON2215) + lag(df$RCON6810) + lag(df$RCON0352) + lag(df$RCON6648)))/
1664312391961:(lag(df$RCON2215) + lag(df$RCON6810) + lag(df$RCON0352) + lag(df$RCON6648)),probs = c(0.01, 0.99), na.rm = TRUE) #core deposit growth rates
df$ci_loans <- ifelse(is.na(df$RCON1766) == TRUE, df$RCON1763+df$RCON1764, df$RCON1766)
df$ci_loans_growth <- Winsorize((ifelse(is.na(df$RCON1766) == TRUE, df$RCON1763+df$RCON1764, df$RCON1766) -
1664312394379:ifelse(is.na(lag(df$RCON1766)) == TRUE, lag(df$RCON1763)+lag(df$RCON1764), lag(df$RCON1766)))/
1664312394381:ifelse(is.na(lag(df$RCON1766)) == TRUE, lag(df$RCON1763)+lag(df$RCON1764), lag(df$RCON1766)),probs = c(0.01, 0.99), na.rm = TRUE)
df$loans <- df$RCON2122
df$loans_growth <- Winsorize((df$RCON2122 - lag(df$RCON2122))/lag(df$RCON2122),probs = c(0.01, 0.99), na.rm = TRUE)
# CAMELS - Duchin Sosyura (2014)----
# Capital Adequacy
df$ca <- Winsorize(df$RCON8274/df$RCONA223, probs=c(.01,.99),na.rm = TRUE)
#Asset quality
df$aq <- -(df$RCON1407 + df$RCON1403)/df$RCON2122
# Capital ratios - Duchin Sosyura (2014) ----
df$t1riskrat <- df$RCON7206
df$totriskrat <- df$RCON7205
df$eqcaprat <- df$RCONG105/df$RCON2170
# Bank fundamentals - Duchin Sosyura (2014) ----
df$size <- Winsorize(log(df$RCON2170),probs=c(.01,.99), na.rm = TRUE)
df$age <- year(df$Date) - year(df$ESTYMD)
join <- read_csv("D:/Research/DW lending empirical/Data/sod_merged.csv")
join$CERT <- as.numeric(join$CERT)
join$Date <- as.Date(join$Date)
df$Date <- as.Date(df$Date)
df <- left_join(data.frame(df), data.frame(join), by= c('cert' = 'CERT', 'Date'))
df$lent_total <- (df$RCONB987 + df$RCONB989)
df$lent_total[IsZero(df$lent_total)] = NA
df$int_paid_ib <- Winsorize(df$RIAD4020*100/(df$lent_total),probs = c(0.05, 0.95), na.rm = TRUE)
df$borr_total <- (df$RCONB993 + df$RCONB995)
df$borr_total[IsZero(df$borr_total)] = NA
df$int_got_ib <- Winsorize(df$RIAD4180*100/(df$borr_total),probs = c(0.05, 0.95), na.rm = TRUE)
rm(join)
conv <- data.frame(Name = unique(dwborrow$Lending.Federal.Reserve.district), FED = as.numeric(str_extract(unique(dwborrow$Lending.Federal.Reserve.district), "[[:digit:]]+")))
cov <- subset(df, as.Date(df$Date) >= as.Date('2019-03-31') & as.Date(df$Date) <= as.Date('2020-06-30'))
cov <- subset(df, as.Date(df$Date) >= as.Date('2019-03-31') & as.Date(df$Date) <= as.Date('2020-09-31'))
plot1 <- cov %>% count(Date, dwborrow_bin)
ggplot(data.frame(plot1), aes(fill=dwborrow_bin, y=n, x=Date)) +
geom_bar(position="stack", stat="identity")
plot1
cov <- subset(df, as.Date(df$Date) >= as.Date('2019-03-31') & as.Date(df$Date) <= as.Date('2020-09-30'))
cov
unique(cov$Date)
plot1 <- cov %>% count(Date, dwborrow_bin)
ggplot(data.frame(plot1), aes(fill=dwborrow_bin, y=n, x=Date)) +
geom_bar(position="stack", stat="identity")
plot1 <- subset(df, as.Date(Date) == as.Date('2020-03-31')) %>% count(Date, FED, dwborrow_cov)
ggplot(data.frame(plot1[1:24,2:4]), aes(fill = dwborrow_cov, y=n, x=as.factor(FED))) + geom_bar(position="stack", stat="identity")
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2020-06-30')) %>% count(Date, FED, dwborrow_cov)
ggplot(data.frame(plot1[1:24,2:4]), aes(fill = dwborrow_cov, y=n, x=as.factor(FED))) + geom_bar(position="stack", stat="identity")
plot1
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_cov', direction='wide'))
plot1
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
plot1
ggplot(data.frame(plot1[1:12,c(1,5)]), aes(y=borrow_share, x=as.factor(FED))) + geom_bar()
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,5)]), aes(y=borrow_share, x=as.factor(FED))) + geom_bar()
data.frame(plot1[1:12,c(1,5)])
data.frame(plot1[1:12,c(1,6)])
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(y=borrow_share, x=as.factor(FED))) + geom_bar()
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(y=borrow_share, x=as.factor(FED))) + geom_point()
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED))) + geom_point()
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED))) + geom_bar()
plot1[1:12,c(1,6)]
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share) + geom_col()
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2020-03-31')) %>% count(Date, FED, dwborrow_cov)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_cov', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2020-06-30')) %>% count(Date, FED, dwborrow_cov)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_cov', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2020-09-30')) %>% count(Date, FED, dwborrow_cov)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_cov', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2019-12-31')) %>% count(Date, FED, dwborrow_cov)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_cov', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_bin', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2019-12-31')) %>% count(Date, FED, dwborrow_bin)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_bin', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2019-09-30')) %>% count(Date, FED, dwborrow_bin)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_bin', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Graph about share of banks that borrow in each district in Q1 2020 ====
plot1 <- subset(df, as.Date(Date) == as.Date('2019-06-30')) %>% count(Date, FED, dwborrow_bin)
plot1 <- data.frame(reshape(plot1, idvar='FED', timevar = 'dwborrow_bin', direction='wide'))
plot1$borrow_share <- plot1$n.1/(plot1$n.0+plot1$n.1)
ggplot(data.frame(plot1[1:12,c(1,6)]), aes(x=as.factor(FED), y = borrow_share)) + geom_col()
# Comparing exposure to local economic condition (measured by Philly coincident index) between large and small banks
aggregate(exposure ~ Date + dwborrow_bin, subset(df, as.Date(Date) >= as.Date('2019-09-30')), FUN = mean)
aggregate(RCON2200 ~ Date, df)
aggregate(RCON2200 ~ Date, df, FUN = sum)
aggregate(reserve_deposit_ratio ~ Date, df, FUN = sum)
df$reserve_deposit_ratio <- df$RCON0010/df$RCON2200
descr(df$reserve_deposit_ratio)
df[is.infinite(df$reserve_deposit_ratio),c('reserve_deposit_ratio')] <- NA
descr(df$reserve_deposit_ratio)
df$reserve_deposit_ratio <- Winsorize(df$reserve_deposit_ratio, probs = c(.01,.99), na.rm = TRUE)
descr(df$reserve_deposit_ratio)
aggregate(reserve_deposit_ratio ~ Date, df, FUN = sum)
aggregate(reserve_deposit_ratio ~ Date, df, FUN = mean)
